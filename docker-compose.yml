version: '3.8'

services:
  # Solo Redis para caching (opcional)
  redis:
    image: redis:7-alpine
    container_name: tustockya_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - tustockya_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Aplicaci√≥n FastAPI - Conecta a tu BD existente
  app:
    build: .
    container_name: tustockya_app
    ports:
      - "8000:8000"
    environment:
      # Conectar a tu base de datos EXISTENTE
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: redis://redis:6379
      
      # Security
      SECRET_KEY: ${SECRET_KEY:-super-secret-key-para-desarrollo}
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 10080
      
      # App Config
      APP_NAME: TuStockYa API
      DEBUG: "true"
      VERSION: 2.0.0
      HOST: 0.0.0.0
      PORT: 8000
      
      # Cloudinary (opcional)
      CLOUDINARY_CLOUD_NAME: ${CLOUDINARY_CLOUD_NAME:-}
      CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY:-}
      CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET:-}
      CLOUDINARY_FOLDER: tustockya
    volumes:
      - .:/app
      - /app/venv  # Excluir venv del host
    networks:
      - tustockya_network
    depends_on:
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s

volumes:
  redis_data:
    driver: local

networks:
  tustockya_network:
    driver: bridge